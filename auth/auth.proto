syntax = "proto3";

package auth;

option go_package = "github.com/andrei-kozel/gladiator-arena-proto/golang/auth";

import "google/protobuf/empty.proto";
import "user/user.proto";  // Import user proto for references

enum ErrorCode {
  ERROR_CODE_UNSPECIFIED = 0;
  ERROR_CODE_INVALID_SESSION = 1;
  ERROR_CODE_SESSION_EXPIRED = 2;
  ERROR_CODE_UNAUTHORIZED = 3;
  ERROR_CODE_INTERNAL = 4;
}

message Error {
  ErrorCode code = 1;
  string message = 2;
  map<string, string> metadata = 3;
}

message SessionInfo {
  string session_id = 1;
  string user_id = 2;
  repeated string permissions = 3;
}

message ValidateSessionRequest {
  string session_id = 1;
}

message ValidateSessionResponse {
  oneof result {
    SessionInfo session = 1;
    Error error = 2;
  }
}

message LogoutRequest {
  string session_id = 1;
}

// Internal messages (for service-to-service communication)
message CreateSessionRequest {
  string user_id = 1;
  string twitch_access_token = 2;
  string twitch_refresh_token = 3;
  int32 expires_in = 4;
  repeated string scopes = 5;
}

message CreateSessionResponse {
  oneof result {
    SessionInfo session = 1;
    Error error = 2;
  }
}

service AuthService {
  // Session management
  rpc ValidateSession(ValidateSessionRequest) returns (ValidateSessionResponse) {}
  rpc Logout(LogoutRequest) returns (google.protobuf.Empty) {}
  
  // Internal methods (service-to-service)
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {}
}