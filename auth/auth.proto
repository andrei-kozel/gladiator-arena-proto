syntax = "proto3";

option go_package = "github.com/andrei-kozel/gladiator-arena-proto/golang/auth";

package auth;

message TokenRequest {
  string user_id = 1;
}

message TokenResponse {
  string token = 1;
}

message TokenValidationRequest {
  string token = 1;
}

message TokenValidationResponse {
  bool valid = 1;
}

message OAuthRequest {
  string client_id = 1;
  string client_secret = 2;
  string code = 3;
  string redirect_uri = 4;
}

message OAuthResponse {
  string access_token = 1;
  string refresh_token = 2;
  int32 expires_in = 3;
  string token_type = 4;
}

message ValidateTokenRequest {
  string access_token = 1;
}

message ValidateTokenResponse {
  string client_id = 1;
  string login = 2;
  string user_id = 3;
  string expires_in = 4;
}

message RefreshTokenRequest {
  string client_id = 1;
  string client_secret = 2;
  string refresh_token = 3;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  int32 expires_in = 3;
  string token_type = 4;
}


service AuthService {
  // OAuth2
  rpc GetOAuthToken(OAuthRequest) returns (OAuthResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

  // JWT Session
  rpc VerifyJWTToken(TokenValidationRequest) returns (TokenValidationResponse);
  rpc GetJWTToken(TokenRequest) returns (TokenResponse);
}